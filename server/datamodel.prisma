type User {
  id: ID! @unique
  userName: String! @unique
  password: String!
  games: [Game!]!
  avatar: String
}

type userGameRoles {
  id: ID! @unique
  role: Roles!
  userId: User!
}

type gamePlayerRoles {
  id: ID! @unique
  gameId: Game!
  playerId: User!

}

type Game {
  id: ID! @unique
  modules: Int
  modulesFailed: Int
  startTime: Int
  endTime: Int
  # defuser: User @relation(name: "StoriesByUser" onDelete: CASCADE)
  # expert: User @relation(name: "StoriesByUser" onDelete: CASCADE)
  strikesAllowed: Int!
  gameStatus: Status!
  needyModules: Boolean @default(value: "false")
}

enum Status {
  INPROGRESS
  COMPLETED
  FAILED
}
enum Roles {
  DEFUSER
  EXPERT
}
